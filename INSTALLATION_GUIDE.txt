================================================================================
                    DISCORDMSG DELETION TOOL - INSTALLATION GUIDE
================================================================================

This guide provides step-by-step instructions to set up the DiscordMSG Deletion Tool
on any system. Follow these commands in order.

================================================================================
                              PREREQUISITES
================================================================================

1. PYTHON INSTALLATION
   - Download Python 3.8+ from: https://www.python.org/downloads/
   - During installation, CHECK "Add Python to PATH"
   - Verify installation:
     python --version
     pip --version

2. NODE.JS INSTALLATION
   - Download Node.js 16+ from: https://nodejs.org/
   - This includes npm automatically
   - Verify installation:
     node --version
     npm --version

3. GIT INSTALLATION (if cloning from GitHub)
   - Download Git from: https://git-scm.com/downloads
   - Verify installation:
     git --version

================================================================================
                            PROJECT SETUP
================================================================================

1. CLONE THE REPOSITORY (if from GitHub)
   git clone https://github.com/yourusername/discordmsg-deletion-tool.git
   cd discordmsg-deletion-tool

   OR

   DOWNLOAD AND EXTRACT
   - Download the project ZIP file
   - Extract to your desired folder
   - Open terminal/command prompt in the project folder

2. VERIFY PROJECT STRUCTURE
   Your project should contain these files:
   - app.py
   - package.json
   - webpack.config.js
   - requirements.txt (create if missing)
   - src/ folder
   - templates/ folder
   - static/ folder

================================================================================
                          PYTHON DEPENDENCIES
================================================================================

1. CREATE VIRTUAL ENVIRONMENT (RECOMMENDED)
   # Windows
   python -m venv venv
   venv\Scripts\activate

   # macOS/Linux
   python3 -m venv venv
   source venv/bin/activate

2. INSTALL PYTHON PACKAGES
   pip install flask
   pip install aiohttp
   pip install pywebview
   pip install asyncio

   OR if you have requirements.txt:
   pip install -r requirements.txt

3. CREATE requirements.txt (if it doesn't exist)
   pip freeze > requirements.txt

================================================================================
                        NODE.JS & REACT DEPENDENCIES
================================================================================

1. INSTALL NODE.JS DEPENDENCIES
   npm install

   If package.json is missing or incomplete, install manually:
   npm init -y
   npm install react react-dom
   npm install @babel/core @babel/preset-react babel-loader
   npm install webpack webpack-cli html-webpack-plugin
   npm install style-loader css-loader
   npm install framer-motion @react-spring/web
   npm install lucide-react

2. INSTALL DEVELOPMENT DEPENDENCIES
   npm install --save-dev @babel/preset-env
   npm install --save-dev webpack-dev-server

3. VERIFY package.json SCRIPTS
   Ensure your package.json contains:
   {
     "scripts": {
       "build": "webpack --mode production",
       "dev": "webpack serve --mode development",
       "start": "python app.py"
     }
   }

================================================================================
                            BUILD THE PROJECT
================================================================================

1. BUILD REACT APPLICATION
   npm run build

   This command:
   - Compiles React components
   - Bundles JavaScript files
   - Generates optimized production files
   - Creates templates/react_index.html

2. VERIFY BUILD SUCCESS
   Check that these files exist:
   - static/dist/bundle.js
   - templates/react_index.html

================================================================================
                          CONFIGURATION SETUP
================================================================================

1. DISCORD TOKEN SETUP
   - Open app.py
   - Replace the TOKEN variable with your Discord bot token:
     TOKEN = "your_discord_bot_token_here"

2. SECURITY NOTE
   - Never commit your real Discord token to GitHub
   - Consider using environment variables:
     import os
     TOKEN = os.getenv('DISCORD_TOKEN', 'your_token_here')

================================================================================
                            RUNNING THE APPLICATION
================================================================================

1. START THE APPLICATION
   python app.py

   OR

   npm start

2. ACCESS THE APPLICATION
   - The app will open automatically in a desktop window
   - Or visit: http://127.0.0.1:5000 in your browser

3. DEVELOPMENT MODE (for coding)
   npm run dev
   # This starts webpack dev server with hot reload

================================================================================
                          TROUBLESHOOTING COMMANDS
================================================================================

1. CLEAR NODE MODULES (if issues occur)
   # Windows
   rmdir /s node_modules
   del package-lock.json
   npm install

   # macOS/Linux
   rm -rf node_modules
   rm package-lock.json
   npm install

2. CLEAR PYTHON CACHE
   # Windows
   for /d /r . %d in (__pycache__) do @if exist "%d" rd /s /q "%d"

   # macOS/Linux
   find . -type d -name __pycache__ -delete

3. REBUILD EVERYTHING
   npm run build
   python app.py

4. CHECK FOR MISSING DEPENDENCIES
   pip check
   npm audit

================================================================================
                        GITHUB REPOSITORY SETUP
================================================================================

1. CREATE .gitignore FILE
   Create .gitignore with this content:

   # Python
   __pycache__/
   *.pyc
   *.pyo
   *.pyd
   .Python
   venv/
   env/
   .env

   # Node.js
   node_modules/
   npm-debug.log*
   yarn-debug.log*
   yarn-error.log*

   # Build outputs
   static/dist/
   *.log

   # OS
   .DS_Store
   Thumbs.db

   # IDE
   .vscode/
   .idea/
   *.swp
   *.swo

2. INITIALIZE GIT REPOSITORY
   git init
   git add .
   git commit -m "Initial commit: DiscordMSG Deletion Tool"

3. CONNECT TO GITHUB
   git remote add origin https://github.com/yourusername/discordmsg-deletion-tool.git
   git branch -M main
   git push -u origin main

4. CREATE README.md
   Create a README.md file with project description and usage instructions

================================================================================
                          DEPLOYMENT COMMANDS
================================================================================

1. CREATE EXECUTABLE (Optional)
   pip install pyinstaller
   pyinstaller --onefile --windowed app.py

2. CREATE DISTRIBUTION PACKAGE
   # Ensure all dependencies are in requirements.txt
   pip freeze > requirements.txt
   
   # Create distribution folder
   mkdir dist
   copy app.py dist/
   copy requirements.txt dist/
   copy -r templates dist/
   copy -r static dist/
   copy -r src dist/
   copy package.json dist/
   copy webpack.config.js dist/

================================================================================
                            QUICK START SUMMARY
================================================================================

For users who just want to run the application:

1. Install Python 3.8+ and Node.js 16+
2. Clone/download the project
3. Run these commands in the project folder:

   # Install Python dependencies
   pip install flask aiohttp pywebview

   # Install Node.js dependencies
   npm install

   # Build the React application
   npm run build

   # Configure your Discord token in app.py
   # Then run the application
   python app.py

================================================================================
                              SUPPORT
================================================================================

If you encounter issues:

1. Check that all prerequisites are installed correctly
2. Ensure you're in the correct project directory
3. Verify your Discord token is valid
4. Check the console output for error messages
5. Try rebuilding with: npm run build

Common Issues:
- "Module not found": Run pip install or npm install
- "Permission denied": Run terminal as administrator
- "Port already in use": Close other applications using port 5000
- "Build failed": Delete node_modules and reinstall

================================================================================
                            VERSION REQUIREMENTS
================================================================================

Minimum versions required:
- Python: 3.8+
- Node.js: 16+
- npm: 8+

Recommended versions:
- Python: 3.10+
- Node.js: 18+
- npm: 9+

================================================================================
                                END OF GUIDE
================================================================================

This installation guide covers everything needed to set up and run the
DiscordMSG Deletion Tool. Keep this file for reference and share it with
other users who want to install the application.

Last updated: 2025